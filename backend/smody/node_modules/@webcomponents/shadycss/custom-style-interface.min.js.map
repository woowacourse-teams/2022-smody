{"version":3,"sources":["src/document-wait.js","src/custom-style-interface.js","src/common-utils.js","src/style-settings.js","entrypoints/custom-style-interface.js"],"names":["readyPromise","whenReady","window","resolveFn","documentWait","callback","requestAnimationFrame","Promise","resolve","document","readyState","addEventListener","then","transformFn","validateFn","constructor","CustomStyleInterface","enqueueDocumentValidation","addCustomStyle","style","SEEN_MARKER","push","getStyleForCustomStyle","customStyle","CACHED_STYLE","processStyles","cs","i","length","styleToTransform","prototype","Object","defineProperties","get","set","fn","needsEnqueue","updateNativeProperties","element","properties","p","removeProperty","setProperty","nativeShadow","nativeCssVariables_","calcCssVariables","settings","navigator","userAgent","match","CSS","supports","cssBuild","ShadyCSS","undefined","disableRuntime","nativeCss","nativeCssVariables","customStyleInterface","prepareTemplate","prepareTemplateDom","prepareTemplateStyles","styleSubtree","styleElement","styleDocument","body","getComputedStyleValue","property","value","getComputedStyle","getPropertyValue","trim","flushCustomStyles"],"mappings":"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","file":"custom-style-interface.min.js","sourcesContent":["/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {Promise<void>} */\nlet readyPromise = null;\n\n/** @type {?function(?function())} */\nlet whenReady =\n  (window['HTMLImports'] && window['HTMLImports']['whenReady']) || null;\n\n/** @type {function()} */\nlet resolveFn;\n\n/**\n * @param {?function()} callback\n */\nexport default function documentWait(callback) {\n  requestAnimationFrame(function () {\n    if (whenReady) {\n      whenReady(callback);\n    } else {\n      if (!readyPromise) {\n        readyPromise = new Promise((resolve) => {\n          resolveFn = resolve;\n        });\n        if (document.readyState === 'complete') {\n          resolveFn();\n        } else {\n          document.addEventListener('readystatechange', () => {\n            if (document.readyState === 'complete') {\n              resolveFn();\n            }\n          });\n        }\n      }\n      readyPromise.then(function () {\n        callback && callback();\n      });\n    }\n  });\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport documentWait from './document-wait.js';\n\n/**\n * @typedef {HTMLStyleElement | {getStyle: function():HTMLStyleElement}}\n */\nexport let CustomStyleProvider;\n\nconst SEEN_MARKER = '__seenByShadyCSS';\nconst CACHED_STYLE = '__shadyCSSCachedStyle';\n\n/** @type {?function(!HTMLStyleElement)} */\nlet transformFn = null;\n\n/** @type {?function()} */\nlet validateFn = null;\n\n/**\nThis interface is provided to add document-level <style> elements to ShadyCSS for processing.\nThese styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles\nIn addition, these styles may also need to be processed for @apply rules and CSS Custom Properties\n\nTo add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})`\n\nIn addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`.\nThis function will be called when calculating styles.\n\nAn example usage of the document-level styling api can be found in `examples/document-style-lib.js`\n\n@unrestricted\n*/\nexport default class CustomStyleInterface {\n  constructor() {\n    /** @type {!Array<!CustomStyleProvider>} */\n    this['customStyles'] = [];\n    this['enqueued'] = false;\n    // NOTE(dfreedm): use quotes here to prevent closure inlining to `function(){}`;\n    documentWait(() => {\n      if (window['ShadyCSS']['flushCustomStyles']) {\n        window['ShadyCSS']['flushCustomStyles']();\n      }\n    });\n  }\n  /**\n   * Queue a validation for new custom styles to batch style recalculations\n   */\n  enqueueDocumentValidation() {\n    if (this['enqueued'] || !validateFn) {\n      return;\n    }\n    this['enqueued'] = true;\n    documentWait(validateFn);\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   */\n  addCustomStyle(style) {\n    if (!style[SEEN_MARKER]) {\n      style[SEEN_MARKER] = true;\n      this['customStyles'].push(style);\n      this.enqueueDocumentValidation();\n    }\n  }\n  /**\n   * @param {!CustomStyleProvider} customStyle\n   * @return {HTMLStyleElement}\n   */\n  getStyleForCustomStyle(customStyle) {\n    if (customStyle[CACHED_STYLE]) {\n      return customStyle[CACHED_STYLE];\n    }\n    let style;\n    if (customStyle['getStyle']) {\n      style = customStyle['getStyle']();\n    } else {\n      style = customStyle;\n    }\n    return style;\n  }\n  /**\n   * @return {!Array<!CustomStyleProvider>}\n   */\n  processStyles() {\n    const cs = this['customStyles'];\n    for (let i = 0; i < cs.length; i++) {\n      const customStyle = cs[i];\n      if (customStyle[CACHED_STYLE]) {\n        continue;\n      }\n      const style = this.getStyleForCustomStyle(customStyle);\n      if (style) {\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        const styleToTransform = /** @type {!HTMLStyleElement} */ (style[\n          '__appliedElement'\n        ] || style);\n        if (transformFn) {\n          transformFn(styleToTransform);\n        }\n        customStyle[CACHED_STYLE] = styleToTransform;\n      }\n    }\n    return cs;\n  }\n}\n\n/* eslint-disable no-self-assign */\nCustomStyleInterface.prototype['addCustomStyle'] =\n  CustomStyleInterface.prototype.addCustomStyle;\nCustomStyleInterface.prototype['getStyleForCustomStyle'] =\n  CustomStyleInterface.prototype.getStyleForCustomStyle;\nCustomStyleInterface.prototype['processStyles'] =\n  CustomStyleInterface.prototype.processStyles;\n/* eslint-enable no-self-assign */\n\nObject.defineProperties(CustomStyleInterface.prototype, {\n  'transformCallback': {\n    /** @return {?function(!HTMLStyleElement)} */\n    get() {\n      return transformFn;\n    },\n    /** @param {?function(!HTMLStyleElement)} fn */\n    set(fn) {\n      transformFn = fn;\n    },\n  },\n  'validateCallback': {\n    /** @return {?function()} */\n    get() {\n      return validateFn;\n    },\n    /**\n     * @param {?function()} fn\n     * @this {CustomStyleInterface}\n     */\n    set(fn) {\n      let needsEnqueue = false;\n      if (!validateFn) {\n        needsEnqueue = true;\n      }\n      validateFn = fn;\n      if (needsEnqueue) {\n        this.enqueueDocumentValidation();\n      }\n    },\n  },\n});\n\n/** @typedef {{\n * customStyles: !Array<!CustomStyleProvider>,\n * addCustomStyle: function(!CustomStyleProvider),\n * getStyleForCustomStyle: function(!CustomStyleProvider): HTMLStyleElement,\n * findStyles: function(),\n * transformCallback: ?function(!HTMLStyleElement),\n * validateCallback: ?function()\n * }}\n */\nexport const CustomStyleInterfaceInterface = {};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {MIXIN_MATCH, VAR_ASSIGN} from './common-regex.js';\n\n/**\n * @param {Element} element\n * @param {Object=} properties\n */\nexport function updateNativeProperties(element, properties) {\n  // remove previous properties\n  for (let p in properties) {\n    // NOTE: for bc with shim, don't apply null values.\n    if (p === null) {\n      element.style.removeProperty(p);\n    } else {\n      element.style.setProperty(p, properties[p]);\n    }\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} property\n * @return {string}\n */\nexport function getComputedStyleValue(element, property) {\n  /**\n   * @const {string}\n   */\n  const value = window.getComputedStyle(element).getPropertyValue(property);\n  if (!value) {\n    return '';\n  } else {\n    return value.trim();\n  }\n}\n\n/**\n * return true if `cssText` contains a mixin definition or consumption\n * @param {string} cssText\n * @return {boolean}\n */\nexport function detectMixin(cssText) {\n  const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n  // reset state of the regexes\n  MIXIN_MATCH.lastIndex = 0;\n  VAR_ASSIGN.lastIndex = 0;\n  return has;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport const nativeShadow = !(\n  window['ShadyDOM'] && window['ShadyDOM']['inUse']\n);\nlet nativeCssVariables_;\n\n/**\n * @param {(ShadyCSSOptions | ShadyCSSInterface)=} settings\n */\nfunction calcCssVariables(settings) {\n  if (settings && settings['shimcssproperties']) {\n    nativeCssVariables_ = false;\n  } else {\n    // chrome 49 has semi-working css vars, check if box-shadow works\n    // safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\n    // However, shim css custom properties are only supported with ShadyDOM enabled,\n    // so fall back on native if we do not detect ShadyDOM\n    // Edge 15: custom properties used in ::before and ::after will also be used in the parent element\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12414257/\n    nativeCssVariables_ =\n      nativeShadow ||\n      Boolean(\n        !navigator.userAgent.match(/AppleWebKit\\/601|Edge\\/15/) &&\n          window.CSS &&\n          CSS.supports &&\n          CSS.supports('box-shadow', '0 0 0 var(--foo)')\n      );\n  }\n}\n\n/** @type {string | undefined} */\nexport let cssBuild;\nif (window.ShadyCSS && window.ShadyCSS.cssBuild !== undefined) {\n  cssBuild = window.ShadyCSS.cssBuild;\n}\n\n/** @type {boolean} */\nexport const disableRuntime = Boolean(\n  window.ShadyCSS && window.ShadyCSS.disableRuntime\n);\n\nif (window.ShadyCSS && window.ShadyCSS.nativeCss !== undefined) {\n  nativeCssVariables_ = window.ShadyCSS.nativeCss;\n} else if (window.ShadyCSS) {\n  calcCssVariables(window.ShadyCSS);\n  // reset window variable to let ShadyCSS API take its place\n  window.ShadyCSS = undefined;\n} else {\n  calcCssVariables(window['WebComponents'] && window['WebComponents']['flags']);\n}\n\n// Hack for type error under new type inference which doesn't like that\n// nativeCssVariables is updated in a function and assigns the type\n// `function(): ?` instead of `boolean`.\nexport const nativeCssVariables = /** @type {boolean} */ (nativeCssVariables_);\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport CustomStyleInterface from '../src/custom-style-interface.js';\n// prettier-ignore\nimport {getComputedStyleValue, updateNativeProperties} from '../src/common-utils.js';\n// prettier-ignore\nimport {nativeCssVariables, nativeShadow, cssBuild, disableRuntime} from '../src/style-settings.js';\n\nconst customStyleInterface = new CustomStyleInterface();\n\nif (!window.ShadyCSS) {\n  window.ShadyCSS = {\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     * @param {string=} elementExtends\n     */\n    prepareTemplate(template, elementName, elementExtends) {}, // eslint-disable-line @typescript-eslint/no-unused-vars\n\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     */\n    prepareTemplateDom(template, elementName) {}, // eslint-disable-line @typescript-eslint/no-unused-vars\n\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     * @param {string=} elementExtends\n     */\n    prepareTemplateStyles(template, elementName, elementExtends) {}, // eslint-disable-line @typescript-eslint/no-unused-vars\n\n    /**\n     * @param {Element} element\n     * @param {Object=} properties\n     */\n    styleSubtree(element, properties) {\n      customStyleInterface.processStyles();\n      updateNativeProperties(element, properties);\n    },\n\n    /**\n     * @param {Element} element\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    styleElement(element) {\n      customStyleInterface.processStyles();\n    },\n\n    /**\n     * @param {Object=} properties\n     */\n    styleDocument(properties) {\n      customStyleInterface.processStyles();\n      updateNativeProperties(document.body, properties);\n    },\n\n    /**\n     * @param {Element} element\n     * @param {string} property\n     * @return {string}\n     */\n    getComputedStyleValue(element, property) {\n      return getComputedStyleValue(element, property);\n    },\n\n    flushCustomStyles() {},\n    nativeCss: nativeCssVariables,\n    nativeShadow: nativeShadow,\n    cssBuild: cssBuild,\n    disableRuntime: disableRuntime,\n  };\n}\n\nwindow.ShadyCSS.CustomStyleInterface = customStyleInterface;\n"]}