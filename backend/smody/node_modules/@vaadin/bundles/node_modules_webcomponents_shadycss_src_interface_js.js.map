{"version":3,"file":"node_modules_webcomponents_shadycss_src_interface_js.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://@vaadin/bundles/./node_modules/@webcomponents/shadycss/src/interface.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2020 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\nfunction setProperties(element, properties) {\n    const style = element.style;\n    for (const [propertyName, value] of Object.entries(properties)) {\n        style.setProperty(propertyName, value);\n    }\n}\n/**\n * True if the ShadyCSS scoped style polyfill is loaded and active.\n *\n * Note that the other functions in this module are safe to call even if the\n * polyfills are not loaded.\n */\nfunction scopedStylesArePolyfilled() {\n    return (window.ShadyCSS !== undefined && window.ShadyCSS.nativeShadow === false);\n}\n/**\n * True if the ShadyCSS custom properties polyfill is loaded and active.\n *\n * Note that the other functions in this module are safe to call even if the\n * polyfills are not loaded.\n */\nfunction customPropertiesArePolyfilled() {\n    return window.ShadyCSS !== undefined && window.ShadyCSS.nativeCss === false;\n}\n/**\n * Prepare the given custom element template for use with the ShadyCSS style\n * scoping polyfill. You only need to do this once per template.\n *\n * If ShadyCSS is not active, then this function does nothing.\n *\n * If ShadyCSS is active, then after styleElement is called on the first\n * instance of this element, <style> tags within this template will be moved to\n * the <head> and re-written to use globally scoped rules that emulate scoped\n * behavior.\n *\n * Note that LitElement and Polymer Library users do not typically need to call\n * this function, because it is called automatically.\n */\nexport function prepareTemplate(template, customElementName) {\n    if (scopedStylesArePolyfilled()) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        window.ShadyCSS.prepareTemplate(template, customElementName);\n    }\n}\n/**\n * Activate scoped styles for the given element instance. This function should\n * typically be called inside connectedCallback. The template of this element\n * class must already have been registered with prepareTemplate.\n *\n * If ShadyCSS is not active, then this function does nothing.\n *\n * Note that LitElement and Polymer Library users do not typically need to call\n * this function, because it is called automatically.\n */\nexport function styleElement(element) {\n    if (scopedStylesArePolyfilled()) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        window.ShadyCSS.styleElement(element);\n    }\n}\n/**\n * Propagate CSS custom properties on this element to all descendant shadow\n * roots, and optionally set new ones.\n *\n * Uses ShadyCSS custom property emulation if the polyfill is active, otherwise\n * calls native style.setProperty.\n */\nexport function styleSubtree(element, properties) {\n    if (customPropertiesArePolyfilled()) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        window.ShadyCSS.styleSubtree(element, properties);\n    }\n    else if (properties != null) {\n        setProperties(element, properties);\n    }\n}\n//# sourceMappingURL=interface.js.map"],"names":[],"sourceRoot":""}